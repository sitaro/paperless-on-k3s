# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: db
#   namespace: paperless
#   labels:
#     app: postgres
# spec:
#   containers:
#   - name: db
#     image: docker.io/library/postgres:16
#     ports:
#     - containerPort: 5432
#     env:
#     - name: POSTGRES_DB
#       value: paperless
#     - name: POSTGRES_USER
#       value: paperless
#     - name: POSTGRES_PASSWORD
#       value: paperless
#     - name: PGDATA
#       value: /var/lib/postgresql/data/pgdata
#     volumeMounts:
#     - mountPath: /var/lib/postgresql/data
#       name: paperless-db-data
#     resources:
#       limits:
#         memory: "512Mi"
#         cpu: "500m"
#       requests:
#         memory: "256Mi"
#         cpu: "250m"
#   volumes:
#   - name: paperless-db-data
#     persistentVolumeClaim:
#       claimName: paperless-db-claim
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: db
#   namespace: paperless
# spec:
#   containers:
#     - name: postgres
#       image: postgres:13
#       envFrom:
#       - configMapRef:
#           name: paperless-env
#       ports:
#       - containerPort: 5432
#       volumeMounts:
#       - name: postgres-storage
#         mountPath: /var/lib/postgresql/data
#   volumes:
#   - name: postgres-storage
#     persistentVolumeClaim:
#       claimName: paperless-db-claim
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: broker
#   namespace: paperless
#   labels:
#     app: redis
# spec:
#   containers:
#   - name: broker
#     image: docker.io/library/redis:7
#     ports:
#     - containerPort: 6379
#     volumeMounts:
#     - mountPath: /data
#       name: paperless-redis-data
#     resources:
#       limits:
#         memory: "512Mi"
#         cpu: "500m"
#       requests:
#         memory: "256Mi"
#         cpu: "250m"
#   volumes:
#   - name: paperless-redis-data
#     persistentVolumeClaim:
#       claimName: paperless-redis-claim
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: broker
#   namespace: paperless
# spec:
#   selector:
#     app: redis
#   ports:
#     - protocol: TCP
#       port: 6379
#       targetPort: 6379
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: webserver
#   namespace: paperless
#   labels:
#     app: webserver
# spec:
#   containers:
#   - name: webserver
#     image: ghcr.io/paperless-ngx/paperless-ngx:latest
#     ports:
#     - containerPort: 8000
#     volumeMounts:
#     - mountPath: /data
#       name: paperless-data
#     - mountPath: /usr/src/paperless/media
#       name: paperless-media
#     - mountPath: /usr/src/paperless/export
#       name: paperless-media
#     - mountPath: /usr/src/paperless/consume
#       name: paperless-consume
#     env:
#       - name: PAPERLESS_REDIS
#         value: redis://broker:6379
#       - name: PAPERLESS_DBHOST
#         value: db
#       - name: PAPERLESS_TIKA_ENABLED
#         value: "1"
#       - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
#         value: http://gotenberg:3000
#       - name: PAPERLESS_TIKA_ENDPOINT
#         value: http://tika:9998
#       - name: PAPERLESS_URL
#         value: https://paperless2.kn.mathops.info
#       - name: PAPERLESS_TIME_ZONE
#         value: Europe/Berlin
#       - name: PAPERLESS_OCR_LANGUAGE
#         value: deu
#       - name: PAPERLESS_SECRET_KEY
#         value: '){GGcEJaf-j+v(-4pDtlJ|H&.N)ITn<s*Tj1K)-d+d7X8;eNMu+(1_4x83tXnkLj'
#     resources:
#       limits:
#         memory: "1Gi"
#         cpu: "1"
#       requests:
#         memory: "1Gi"
#         cpu: "1"
#   volumes:
#   - name: paperless-data
#     persistentVolumeClaim:
#       claimName: paperless-data-claim
#   - name: paperless-media
#     persistentVolumeClaim:
#       claimName: paperless-media-claim
#   - name: paperless-export
#     persistentVolumeClaim:
#       claimName: paperless-export-claim
#   - name: paperless-consume
#     persistentVolumeClaim:
#       claimName: paperless-consume-claim
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: webserver
#   namespace: paperless
# spec:
#   selector:
#     app: webserver
#   ports:
#     - protocol: TCP
#       port: 8000
#       targetPort: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:13
        envFrom:
        - configMapRef:
            name: paperless-env
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: paperless-db-claim